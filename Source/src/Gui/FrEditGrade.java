/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Gui;

import data.*;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

import javax.swing.JOptionPane;

/**
 *
 * @author tndkh_000
 */
public class FrEditGrade extends javax.swing.JFrame {

    /**
     * Creates new form FrEditGrade
     */
    public FrEditGrade(String gradeID, Double salary, Double col, Double maxAmount, int minPer, int maxPer) {
        initComponents();
        setLocationRelativeTo(this);
        this.setDefaultCloseOperation(this.DISPOSE_ON_CLOSE);
        txtGradeID.setText(gradeID);
        txtSalary.setText(Double.toString(salary));
        txtColla.setText(Double.toString(col));
        txtMaxAmount.setText(Double.toString(maxAmount));
        txtMinPer.setText(Integer.toString(minPer));
        txtMaxPer.setText(Integer.toString(maxPer));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        PnGrade = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtGradeID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnOk = new javax.swing.JButton();
        txtCancel = new javax.swing.JButton();
        txtSalary = new javax.swing.JTextField();
        txtColla = new javax.swing.JTextField();
        txtMaxAmount = new javax.swing.JTextField();
        txtMaxPer = new javax.swing.JTextField();
        txtMinPer = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Update Grade");
        setResizable(false);

        PnGrade.setBackground(new java.awt.Color(204, 255, 255));
        PnGrade.setLayout(new java.awt.GridBagLayout());

        jLabel8.setText("Min Period");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 103, 0, 0);
        PnGrade.add(jLabel8, gridBagConstraints);

        jLabel1.setText("Grade ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(33, 112, 0, 0);
        PnGrade.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Gross Salary ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(19, 92, 0, 0);
        PnGrade.add(jLabel2, gridBagConstraints);

        txtGradeID.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 134;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 37, 0, 0);
        PnGrade.add(txtGradeID, gridBagConstraints);

        jLabel3.setText("Collateral");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(14, 107, 0, 0);
        PnGrade.add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Grade");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(13, 37, 0, 0);
        PnGrade.add(jLabel4, gridBagConstraints);

        jLabel5.setText("Max Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(14, 92, 0, 0);
        PnGrade.add(jLabel5, gridBagConstraints);

        jLabel6.setText("Max Period");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 99, 0, 0);
        PnGrade.add(jLabel6, gridBagConstraints);

        btnOk.setText("Edit");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 136, 29, 0);
        PnGrade.add(btnOk, gridBagConstraints);

        txtCancel.setText("Cancel");
        txtCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 18, 29, 88);
        PnGrade.add(txtCancel, gridBagConstraints);

        txtSalary.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSalaryKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 134;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 37, 0, 0);
        PnGrade.add(txtSalary, gridBagConstraints);

        txtColla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCollaKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 134;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 37, 0, 0);
        PnGrade.add(txtColla, gridBagConstraints);

        txtMaxAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMaxAmountKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 134;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 37, 0, 0);
        PnGrade.add(txtMaxAmount, gridBagConstraints);

        txtMaxPer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMaxPerKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 134;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 37, 0, 0);
        PnGrade.add(txtMaxPer, gridBagConstraints);

        txtMinPer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMinPerKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 134;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 37, 0, 0);
        PnGrade.add(txtMinPer, gridBagConstraints);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 18, 29, 0);
        PnGrade.add(btnDelete, gridBagConstraints);

        getContentPane().add(PnGrade, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        String id = txtGradeID.getText().trim();
        String salary = txtSalary.getText().trim();
        String col = txtColla.getText().trim();
        String maxAmount = txtMaxAmount.getText().trim();
        String maxPer = txtMaxPer.getText().trim();
        String minPer = txtMinPer.getText().trim();
        if (id.equals("") || salary.equals("") || col.equals("") || maxAmount.equals("") || maxPer.equals("") || minPer.equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill all the fields");
        } else {
            Grade g = new Grade(id, Double.parseDouble(salary), Double.parseDouble(col), Double.parseDouble(maxAmount), Integer.parseInt(minPer), Integer.parseInt(maxPer));
            data.GradeList gList = new data.GradeList();
            if (!gList.update(g)) {
                JOptionPane.showMessageDialog(null, "Update failed !");
            } else {
                JOptionPane.showMessageDialog(null, "Update succeed !");
                
                
            }

        }
    }//GEN-LAST:event_btnOkActionPerformed

    private void txtCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCancelActionPerformed
        this.dispose();
// TODO add your handling code here:

    }//GEN-LAST:event_txtCancelActionPerformed

    private void txtSalaryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSalaryKeyPressed
        txtSalary.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char vChar = e.getKeyChar();
                if (!(Character.isDigit(vChar)
                        || (vChar == KeyEvent.VK_BACK_SPACE)
                        || (vChar == KeyEvent.VK_DELETE))) {
                    e.consume();
                }
            }
        });        // TODO add your handling code here:
    }//GEN-LAST:event_txtSalaryKeyPressed

    private void txtCollaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCollaKeyPressed
        txtColla.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char vChar = e.getKeyChar();
                if (!(Character.isDigit(vChar)
                        || (vChar == KeyEvent.VK_BACK_SPACE)
                        || (vChar == KeyEvent.VK_DELETE))) {
                    e.consume();
                }
            }
        });        // TODO add your handling code here:
    }//GEN-LAST:event_txtCollaKeyPressed

    private void txtMaxAmountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaxAmountKeyPressed
        txtMaxAmount.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char vChar = e.getKeyChar();
                if (!(Character.isDigit(vChar)
                        || (vChar == KeyEvent.VK_BACK_SPACE)
                        || (vChar == KeyEvent.VK_DELETE))) {
                    e.consume();
                }
            }
        });        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaxAmountKeyPressed

    private void txtMaxPerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaxPerKeyPressed
        txtMaxPer.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char vChar = e.getKeyChar();
                if (!(Character.isDigit(vChar)
                        || (vChar == KeyEvent.VK_BACK_SPACE)
                        || (vChar == KeyEvent.VK_DELETE))) {
                    e.consume();
                }
            }
        });        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaxPerKeyPressed

    private void txtMinPerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMinPerKeyPressed
        txtMinPer.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char vChar = e.getKeyChar();
                if (!(Character.isDigit(vChar)
                        || (vChar == KeyEvent.VK_BACK_SPACE)
                        || (vChar == KeyEvent.VK_DELETE))) {
                    e.consume();
                }
            }
        });        // TODO add your handling code here:
    }//GEN-LAST:event_txtMinPerKeyPressed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String id = txtGradeID.getText().trim();
        String salary = txtSalary.getText().trim();
        String col = txtColla.getText().trim();
        String maxAmount = txtMaxAmount.getText().trim();
        String maxPer = txtMaxPer.getText().trim();
        String minPer = txtMinPer.getText().trim();
        if (id.equals("") || salary.equals("") || col.equals("") || maxAmount.equals("") || maxPer.equals("") || minPer.equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill all the fields");
        } else {
            int reply = JOptionPane.showConfirmDialog(null, "Delete " + id + ", Are u sure ?", "Xac nhan thanh toan", 2);
            if (reply == JOptionPane.YES_OPTION) {
                data.GradeList gList = new data.GradeList();
                if (!gList.delete(id)) {
                    JOptionPane.showMessageDialog(null, "Delete failed !");
                } else {
                    JOptionPane.showMessageDialog(null, "Delete succeed !");
                    
                }
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PnGrade;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnOk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JButton txtCancel;
    private javax.swing.JTextField txtColla;
    private javax.swing.JTextField txtGradeID;
    private javax.swing.JTextField txtMaxAmount;
    private javax.swing.JTextField txtMaxPer;
    private javax.swing.JTextField txtMinPer;
    private javax.swing.JTextField txtSalary;
    // End of variables declaration//GEN-END:variables
}
