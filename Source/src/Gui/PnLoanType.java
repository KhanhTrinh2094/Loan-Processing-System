/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Gui;

import data.LoanTypeList;
import data.Loantype;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Mihawk
 */
public class PnLoanType extends javax.swing.JPanel {

    int dk = 0;
    JPanel PnShow;

    public PnLoanType(JPanel PnShow) {
        initComponents();
        initData();
        this.PnShow = PnShow;
        btnUpdate.setEnabled(false);
        btnDelete.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtLoanName = new javax.swing.JTextField();
        btnOK = new javax.swing.JButton();
        txtRate = new javax.swing.JFormattedTextField();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbLoan = new javax.swing.JTable();

        setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 255), new java.awt.Color(153, 153, 255)));
        setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "LOAN TYPE", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Agency FB", 1, 24), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel1.setMaximumSize(new java.awt.Dimension(423, 254));
        jPanel1.setMinimumSize(new java.awt.Dimension(423, 254));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Loan Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(77, 76, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Interest Rate");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 76, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        txtLoanName.setMaximumSize(new java.awt.Dimension(6, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 187;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(74, 19, 0, 82);
        jPanel1.add(txtLoanName, gridBagConstraints);

        btnOK.setText("Insert");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(39, 97, 62, 0);
        jPanel1.add(btnOK, gridBagConstraints);

        txtRate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRateKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 187;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(37, 19, 0, 82);
        jPanel1.add(txtRate, gridBagConstraints);

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(39, 10, 62, 0);
        jPanel1.add(btnUpdate, gridBagConstraints);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(39, 10, 62, 0);
        jPanel1.add(btnDelete, gridBagConstraints);

        add(jPanel1, java.awt.BorderLayout.WEST);

        jPanel2.setLayout(new java.awt.BorderLayout());

        tbLoan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Loan Name", "Interest Rate"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbLoan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbLoanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbLoan);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        if (dk == 0) {
            String name = txtLoanName.getText().trim();
            String rate = txtRate.getText().trim();
            if (name.equals("") || rate.equals("")) {
                JOptionPane.showMessageDialog(null, "Please fill all the fields");
            } else {
                Loantype lt = new Loantype(name, Integer.parseInt(rate));
                LoanTypeList ltList = new LoanTypeList();
                if (ltList.insert(lt)) {
                    JOptionPane.showMessageDialog(null, "Insert Successed");
                    txtLoanName.setText("");
                    txtRate.setText("");
                    model.setRowCount(0);
                    initData();
                } else {
                    JOptionPane.showMessageDialog(null, "Loan Name Duplicated");
                }

            }
        } else {
            txtLoanName.setText(null);
            txtLoanName.setEnabled(true);
            txtRate.setText(null);
            dk = 0;
            btnOK.setText("Insert");
            btnUpdate.setEnabled(false);
            btnDelete.setEnabled(false);

        }

    }//GEN-LAST:event_btnOKActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String name = txtLoanName.getText().trim();
        String rate = txtRate.getText().trim();
        if (name.equals("") || rate.equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill all the fields");
        } else {
            Loantype lt = new Loantype(name, Integer.parseInt(rate));
            LoanTypeList ltList = new LoanTypeList();
            if (ltList.update(lt)) {
                JOptionPane.showMessageDialog(null, "Update Successed");
                txtLoanName.setText("");
                txtRate.setText("");
                model.setRowCount(0);
                initData();
            } else {
                JOptionPane.showMessageDialog(null, "Update Fail ");
            }

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tbLoanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbLoanMouseClicked
        int i = tbLoan.getSelectedRow();
        //doc du lieu cua tung cot tren dong nay, fill vao cac o nhap lieu

        txtLoanName.setText(tbLoan.getValueAt(i, 0).toString());
        txtRate.setText(tbLoan.getValueAt(i, 1).toString());
        btnOK.setText(" New ");
        txtLoanName.setEnabled(false);
        dk = 1;
        btnUpdate.setEnabled(true);
        btnDelete.setEnabled(true);
    }//GEN-LAST:event_tbLoanMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String name = txtLoanName.getText().trim();
        String rate = txtRate.getText().trim();
        if (name.equals("") || rate.equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill all the fields");
        } else {

            LoanTypeList ltList = new LoanTypeList();
            if (ltList.delete(name)) {
                JOptionPane.showMessageDialog(null, "Delete Successed");
                txtLoanName.setText("");
                txtRate.setText("");
                model.setRowCount(0);
                initData();
            } else {
                JOptionPane.showMessageDialog(null, "Delete Fail ");
            }

        }

// TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtRateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRateKeyPressed
        txtRate.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char vChar = e.getKeyChar();
                if (!(Character.isDigit(vChar)
                        || (vChar == KeyEvent.VK_BACK_SPACE)
                        || (vChar == KeyEvent.VK_DELETE))) {
                    e.consume();
                }
            }
        });            // TODO add your handling code here:
    }//GEN-LAST:event_txtRateKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbLoan;
    private javax.swing.JTextField txtLoanName;
    private javax.swing.JFormattedTextField txtRate;
    // End of variables declaration//GEN-END:variables

    DefaultTableModel model;
    TableRowSorter<TableModel> sorter;

    private void initData() {
        model = (DefaultTableModel) tbLoan.getModel();
        LoanTypeList gl = new LoanTypeList();
        for (Loantype item : gl.getList()) {
            model.addRow(item.toVector2());
        }

        sorter = (TableRowSorter<TableModel>) tbLoan.getRowSorter();

    }
}
